-- =====================================================================
-- Script para crear la Base de Datos para el sistema de Agenda Médica
-- =====================================================================

-- 1. Creación de la base de datos (si no existe)
IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = 'AgendaMedicaDB')
BEGIN
    CREATE DATABASE AgendaMedicaDB;
END
GO

-- 2. Usar la base de datos recién creada
USE AgendaMedicaDB;
GO

-- =====================================================================
-- 3. Creación de las Tablas
-- =====================================================================

-- Tabla para almacenar la información de los pacientes
-- Corresponde a la clase 'Paciente' en Python.
PRINT 'Creando la tabla Pacientes...';
CREATE TABLE Pacientes (
    PacienteID INT PRIMARY KEY IDENTITY(1,1), -- Corresponde a 'id', autoincremental
    Nombre NVARCHAR(150) NOT NULL,            -- Corresponde a 'nombre'
    FechaNacimiento DATE NOT NULL,             -- Corresponde a 'fecha_nac'
    Telefono VARCHAR(20) NULL                  -- Corresponde a 'telefono'
);
GO

-- Tabla para almacenar la información de los médicos
-- Corresponde a la clase 'Medico' en Python.
PRINT 'Creando la tabla Medicos...';
CREATE TABLE Medicos (
    MedicoID INT PRIMARY KEY IDENTITY(1,1),   -- Corresponde a 'id', autoincremental
    Nombre NVARCHAR(150) NOT NULL,           -- Corresponde a 'nombre'
    Especialidad NVARCHAR(100) NOT NULL      -- Corresponde a 'especialidad'
);
GO

-- Tabla para gestionar las citas médicas
-- Combina la clase 'Cita' y la lógica del 'historial' de atención.
PRINT 'Creando la tabla Citas...';
CREATE TABLE Citas (
    CitaID INT PRIMARY KEY IDENTITY(1,1),      -- Corresponde a 'id', autoincremental
    PacienteID INT NOT NULL,                   -- Clave foránea para Pacientes
    MedicoID INT NOT NULL,                     -- Clave foránea para Medicos
    FechaHora DATETIME NOT NULL,               -- Corresponde a 'fecha_hora'
    Motivo NVARCHAR(500) NULL,                 -- Corresponde a 'motivo'
    Estado VARCHAR(20) NOT NULL DEFAULT 'pendiente', -- Corresponde a 'estado'
    NotasAtencion NVARCHAR(MAX) NULL,          -- Para guardar las 'notas' del historial

    -- Definición de las relaciones (claves foráneas)
    CONSTRAINT FK_Citas_Pacientes FOREIGN KEY (PacienteID) REFERENCES Pacientes(PacienteID),
    CONSTRAINT FK_Citas_Medicos FOREIGN KEY (MedicoID) REFERENCES Medicos(MedicoID),

    -- Restricción para asegurar que los estados sean válidos
    CONSTRAINT CK_Citas_Estado CHECK (Estado IN ('pendiente', 'atendida', 'cancelada')),

    -- Restricción para evitar que un médico tenga dos citas a la misma hora
    CONSTRAINT UQ_Medico_FechaHora UNIQUE (MedicoID, FechaHora)
);
GO

PRINT '¡Base de datos y tablas creadas exitosamente!';
GO